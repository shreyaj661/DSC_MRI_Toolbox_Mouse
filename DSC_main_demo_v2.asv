% DSC_mri_toolbox demo

% ------ Load the dataset to be analyzed ---------------------------------
DSC_info   = niftiinfo(fullfile('demo-data','GRE_DSC1.nii.gz'));
DSC_volume = niftiread(DSC_info);

% ------ Set minimum acquistion parameters -------------------------------
TE = 0.025; % 25ms
TR = 1.55;  % 1.55s

% ------ Perform quantification ------------------------------------------ 
% Input   DSC_volume (4D matrix with raw GRE-DSC acquisition)
%         TE         (Echo time)
%         TR         (Repetition time)
% Output  cbv        (3D matrix with standard rCBV values)
%         cbf        (struct with 3D matrices of rCBF values for each method selected)
%         mtt        (struct with 3D matrices of MTT values for each method selected)
%         cbv_lc     (3D matrix with leackage corrected rCBV values)
%         ttp        (3D matrix with leackage corrected Time to Peak values)
%         mask       (3D matrix with computed mask)
%         aif        (struct with AIF extracted with clustering algorithm)
%         conc       (4D matrix with pseudo-concentration values)
%         s0         (3D matrix with S0 estimates from pre-contrast images)

[cbv,cbf,mtt,cbv_lc,ttp,mask,aif,conc,s0]=DSC_mri_core(DSC_volume,TE,TR);

% ------ View Results ----------------------------------------------------
DSC_mri_show_results(cbv_lc,cbf,mtt,ttp,mask,aif,conc,s0);

% ------ Save Results in NIFTI format ------------------------------------
% ------ use header information of the original DSC-MRI sequence ---------
% Code Modified By Shreya Jain
%  Dated- 3rd May, 2023
nifti_template = DSC_info;
nifti_template.Datatype= 'double';
nifti_template.BitsPerPixel= 64;
nifti_template.PixelDimensions=nifti_template.PixelDimensions(1:3);
var_outDirName = 'demo-data';

var_outParams = [cbv, cbf, mtt, cbv_lc];          

for param=var_outParams

    nifti_template.ImageSize=size(cbf);
    var_fieldnames = fieldnames(cbf);
    
    var_arr_outFileNames=cell(length(var_fieldnames),1);
    for fn=1:length(var_fieldnames)
        var_arr_outFileNames{fn}="cbf_"+var_fieldnames{fn,1}+".nii"
        disp(var_arr_outFileNames{fn,1})
    end
    
    func_niftiwrite (nifti_template, cbf, var_arr_outFileNames, var_outDirName);
end




